<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:context ="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
      http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
      http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
      http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
    <!--DATASOURCE-->
    <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource">
        <constructor-arg ref="hikariConfig"/>

    </bean>

<!--여기를 커넥션풀 설정이라고 한다-->
    <bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
        <property name="idleTimeout" value="30000" />
        <property name="connectionTimeout" value="3000" />
        <property name="maxLifetime" value="400000" />
        <property name="maximumPoolSize" value="300" />
        <property name="minimumIdle" value="20" />
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver" />
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/bitdb?serverTimezone=UTC" />
        <property name="username" value="bit" />
        <property name="password" value="bit" />
    </bean>

    <!--여기 name 은 위의 bean의 datasource 여기 dataSource는 위에 dataSource를 가지고 있는것이다 !-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <property name="configLocation" value="classpath:/mybatis-config.xml"></property>
        <property name="mapperLocations" value="classpath:/Mappers/**/*Mapper.xml"></property>
    </bean>

    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="clearCache">
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />
    </bean>
   <!-- <bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig"/>-->

    <context:component-scan base-package="com.bit.dao"/>
    <context:component-scan base-package="com.bit.Service"/>
    <context:component-scan base-package="com.bit.dto"/>

    <!--/Mappers/**/*Mapper.xml 이렇게 하면 Mappers/**하면 우선 Mappers아래에 있는 모든 폴더를 말하고 있는거고 /*Mapper로 하면 Mapper로 끝나는 모든Mapper.xml파일을 선택한다 -->
    <!--   com.zaxxer.hikari.HikariConfig(히카리구성은)는 HikariCP라는 자바 데이터베이스 커넥션 풀 라이브러리를 구성하는 데 사용
이 클래스는 데이터베이스 연결 풀의 동작 및 속성을 구성하는 데 사용
JDBC URL (jdbcUrl): 데이터베이스에 연결하기 위한 JDBC URL을 설정합니다.
jdbc:mysql://localhost:3306/mydatabase와 같은 형식

사용자 이름 (username): 데이터베이스에 연결할 때 사용할 사용자 이름
암호 (password): 데이터베이스에 연결할 때 사용할 암호를 설정
커넥션 풀 크기 (maximumPoolSize): 동시에 활성화된 최대 커넥션 수를 설정 이 수는 동시에 처리할 수 있는 데이터베이스 연결의 최대 수
최소 커넥션 개수 (minimumIdle): 유휴 상태로 유지될 최소한의 커넥션 수를 설정합니다. 이는 애플리케이션이 커넥션 풀에 대한 최소한의 유지 요구 사항을 설정
Connection Timeout (connectionTimeout): 데이터베이스 연결 시도 후 타임아웃되는 시간(밀리초 단위)을 설정
Idle Timeout (idleTimeout): 커넥션이 유휴 상태로 유지되는 최대 시간(밀리초 단위)을 설정합니다. 이 시간이 경과한 후에는 유휴 커넥션이 닫힘.
Max Lifetime (maxLifetime): 커넥션의 최대 수명(밀리초 단위)을 설정합니다. 이 시간이 경과한 후에는 커넥션이 폐기되고 새로운 커넥션이 만들어진다.
 -->


</beans>